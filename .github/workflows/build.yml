#
# SPDX-License-Identifier: Apache-2.0
#
# Copyright 2015-2021 Andres Almiray
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Build

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}
          restore-keys: |
            ${{ runner.os }}-gradlew-

      - name: Build
        run: ./gradlew -Prelease=true build -S

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: |
            apps/ikonli-browser/build/distributions/ikonli-browser-*.zip
            apps/ikonli-browser/build/ikonli-browser-standalone-*.zip

  earlyaccess:
    name: Early Access
    needs: build
    if: github.repository == 'kordamp/ikonli' && startsWith(github.event.head_commit.message, 'Releasing version') != true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v2

      - name: Display build artifacts
        run: ls -R artifact

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'

      - name: Version
        id: vars
        run: echo ::set-output name=version::$(cat VERSION)

      - name: Release
        uses: jreleaser/release-action@v1
        with:
          version: early-access
        env:
          JRELEASER_PROJECT_VERSION: ${{ steps.vars.outputs.version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties
            out/jreleaser/release/CHANGELOG.md
